#include<bits/stdc++.h>
using namespace std;
#define sf scanf
#define pf printf
bool check(int N , int pos)
{
    return (bool)(N&(1<<pos));
}

int Set(int N , int pos)
{
    return N = N | (1<<pos);
}

int N =  1000000;

int status[ 1000000/32] = {0};

void sieve()
{
    int i,j,sqrtN;
    sqrtN = sqrt(N);
    for(i = 4 ; i<=N ; i+=2) status[i/32] = Set(status[i/32],i%32);
    for( i = 3 ; i <= sqrtN ; i+=2)
    {
        if(check(status[i/32],i%32) == 0)
           {
               for(j = i*i ; j<=N ; j += i)
                {
                   status[j/32] = Set(status[j/32],j%32);
                }
           }
    }

}
int main()
{
    sieve();
    int n,mx,i;
    while(sf("%d",&n)==1)
    {
        if(n == 0) break;
        mx = 0;
        bool fg = false;
        for(i = 3 ; i<=n/2 ; i+=2)
        {
            if(check(status[i/32],i%32) == 0)
            {
                if(check(status[(n-i)/32],(n-i)%32) == 0)
                {
                    fg = true;
                    break;
                }
            }
        }
        if(fg) pf("%d = %d + %d\n",n,i,(n-i));
        else pf("Goldbach's conjecture is wrong.\n");

    }

return 0;
}
