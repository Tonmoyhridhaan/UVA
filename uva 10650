#include<bits/stdc++.h>
using namespace std;
#define sf scanf
#define pf printf
#define pb push_back
#define i64 long long int
const double pi = 2*acos(0) ;
#define mx 10000001
bool status[32000] = {0};

int prime()
{
    int N = 32000;
    int sq = sqrt(N);

    for(int i = 4 ; i<=N ; i+=2) status[i] = 1;
    for(int i = 3 ; i<=sq ; i+=2)
    {
        if(status[i] == 0)
        {
            for(int j = i*i ; j<=N ; j+=i)
            {
                status[j] = 1;
            }
        }

    }
    status[1] = 1;
    status[0] = 1;
return 0;

}

int check(int i, int j)
{
    for(i = i+1 ; i<j ; i++)
    {
        if(status[i] == 0) return 0;
    }
    return 1;
}

int main()
{
    prime();
    int x,y,i,k,j;
    vector<int>v,v2;
    stack<int>stk;
    while(scanf("%d%d",&x,&y) == 2)
    {
        if(x == 0 && y == 0) return 0;

        if(x>y) swap(x,y);
        int z = x;
        v.clear();
        for( ; x<=y ; x++)
        {
            if(status[x] == 0) v.pb(x);
        }
        int sz = v.size();

        for(i = 0 ; i<sz-1 ;i++ )
        {
            int diff = abs(v[i] - v[i+1]);
            int cnt = 1;
            for(j=i ; j<sz-1 ; j++)
            {
                if(abs(v[j] - v[j+1]) == diff) cnt++;
                else break;
            }

            bool fg = true;
            if(cnt>2)
            {
                v2.clear();
                while(!stk.empty()) stk.pop();

                k = i;
                int tmp  = diff;
                bool fg2 = true;
                int tmpr = v[k];
                while(status[v[k] - tmp] == 0 && (v[k] - tmp) >= 0)
                {
                    if(check(v[k] - tmp,tmpr) == 0) break;
                    stk.push(v[k] - tmp);

                    if((v[k]-tmp)<z)
                    {
                        fg = false;
                        break;
                    }
                    tmp = tmp*2;
                    tmpr = tmpr - diff;
                }
                if(fg == false) continue;

                k = j;
                tmp = diff;
                tmpr = v[k];
                while(status[v[k] + tmp] == 0 && (v[k] + tmp)<= 32000)
                {
                    if(check(tmpr,(v[k]+tmp)) == 0) break;
                    v2.pb(v[k] + tmp);

                    if((v[k]+tmp)>y)
                    {
                        fg = false;
                        break;
                    }
                    tmp = tmp*2;
                    tmpr = tmpr + diff;
                }
                if(fg == false) continue;

                while(!stk.empty())
                {
                    pf("%d ",stk.top());
                    stk.pop();
                }
                for(k = i ; k<=j ; k++)
                {
                   if(k<j) pf("%d ",v[k]);
                   else pf("%d",v[k]);
                }
                int sz2 = v2.size();
                for(k = 0 ; k<sz2 ; k++)
                {
                    if(k<sz2-1)pf("%d ",v2[k]);
                    else pf("%d",v2[k]);
                }

                fg = false;
            }
            j--;
            if(!fg) pf("\n");
            i = j;
        }
    }

return 0;
}


